version: '2'

#  {----------------------------------------------------------------}
#  Copyright Â© 2024 MOHAMMAD WILDAN NURYULDA (mwnsan.id@gmail.com)
#  created date [sunday, 21 Januari 2024 - 01:43:00]
#  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
#  Licensed under the Apache License, Version 2.0 (the "License") at;
#  //////////////////////////////////////////////////////////////////
#  http://www.apache.org/licenses/LICENSE-2.0
#  {----------------------------------------------------------------}

services:
  ZK731:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: ZK731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    volumes:
      - /etc/kafka/data/zk-data:/var/lib/zookeeper/data
      - /etc/kafka/data/zk-txn-logs:/var/lib/zookeeper/log
      - /etc/kafka/secrets:/etc/kafka/secrets
      - /etc/kafka/jaas:/etc/kafka/jaas
    environment:
      # =================================  ZOOKEEPER  =================================
      # -> general config zookeeper
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 6000
      ZOOKEEPER_INIT_LIMIT: 15
      ZOOKEEPER_SYNC_LIMIT: 10
      ZOOKEEPER_MAX_CLIENT_CNXNS: 0

      # -> log
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "INFO"

      # -> zookeeper servers
      ZOOKEEPER_SERVERS: domain.com:2888:3888;domain:2888:3888;domain:2888:3888

      # -> ssl zookeeper
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_CLIENT_AUTH: none

      # -> ssl zookeeper quorum
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: confluent

      # -> sasl zookeeper
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_AUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider

      # -> jmx port
      KAFKA_JMX_PORT: 9581

      # -> timezone
      TZ: Asia/Jakarta

      # other zookeeper stuff
      KAFKA_HEAP_OPTS: -Xms1G
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
                  -Djava.security.auth.login.config=/etc/kafka/jaas/zookeeper_server_jaas.conf



  BK731:
    image: confluentinc/cp-server:7.3.1
    container_name: BK731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    volumes:
      - /etc/kafka/data/kafka-data:/var/lib/kafka/data
      - /etc/kafka/secrets:/etc/kafka/secrets
      - /etc/kafka/jaas:/etc/kafka/jaas
    environment:
      # ================================= BROKER =================================
      # -> general config
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: R1

      # -> zookeeper connection
      KAFKA_ZOOKEEPER_CONNECT: domain.com:2181
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 120000
      KAFKA_ZOOKEEPER_SET_ACL: 'true'

      # -> zookeeper connection ssl
      #KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      #KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      #KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.keystore.jks
      #KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      #KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      #KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.truststore.jks
      #KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      #KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS

      # -> acl
      KAFKA_SUPER_USERS: User:ANONYMOUS;User:admin
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-256
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'

      # -> listeners broker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL
      KAFKA_LISTENERS: PLAINTEXT://domain.com:9092,SSL://domain.com:9093,SASL_SSL://domain.com:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://domain.com:9092,SSL://domain.com:9093,SASL_SSL://domain.com:9094

      # -> log
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      # -> ssl broker
      KAFKA_SSL_KEYSTORE_FILENAME: sibernetik.co.id.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: sibernetik.co.id.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds

      # -> metrics reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: domain.com:9093,confluent-center.sibernetik.co.id:9093,confluent-north.sibernetik.co.id:9093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_ENABLE: 'true'

      # -> metrics reporter ssl
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SSL
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/sibernetik.co.id.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: confluent
      CONFLUENT_METRICS_REPORTER_SSL_KEY_PASSWORD: confluent

      # -> components partitions and impersonation broker
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3

      # -> schema-registry connect
      #KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://domain.com:8081

      # -> disable auto-enable telemetry
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'

      # -> disable self balancing
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'

      # -> disable health plus
      CONFLUENT_TELEMETRY_ENABLED: 'false'

      # -> jmx port
      KAFKA_JMX_PORT: 9582

      # -> timezone
      TZ: Asia/Jakarta

      # -> other broker stuff
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
      KAFKA_HEAP_OPTS: -Xms1G
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/jaas/broker_server_jaas.conf
                  -Dzookeeper.client.secure=true
                  -Dzookeeper.ssl.keyStore.location=/etc/kafka/secrets/sibernetik.co.id.keystore.jks
                  -Dzookeeper.ssl.keyStore.password=confluent
                  -Dzookeeper.ssl.trustStore.location=/etc/kafka/secrets/sibernetik.co.id.truststore.jks
                  -Dzookeeper.ssl.trustStore.password=confluent


  SR731:
    image: confluentinc/cp-schema-registry:7.3.1
    container_name: SR731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    volumes:
      - /etc/kafka/secrets:/etc/kafka/secrets
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      # ======================= SCHEMA REGISTRY =======================
      # -> general config schema-registry
      SCHEMA_REGISTRY_HOST_NAME: domain.com
      SCHEMA_REGISTRY_LISTENERS: http://domain.com:8081,https://domain.com:8082
      SCHEMA_REGISTRY_DEBUG: 'true'
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: domain.com:9093

      # -> schema compability [ backward, backward_transitive, forward, forward_transitive, full, full_transitife, none]
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: backward_transitive

      # -> log
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO

      # -> ssl schema-registry connect to broker
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent

      # -> ssl schema-registry https end-point
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks

      # -> timezone
      TZ: Asia/Jakarta

      # -> other schema registry stuff
      SCHEMA_REGISTRY_OPTS: -Xmx1G



  KC731:
    image: confluentinc/cp-enterprise-replicator:7.3.1
    container_name: KC731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    volumes:
      - /etc/kafka/connect-plugins:/connect-plugins
      - /etc/kafka/secrets:/etc/kafka/secrets
      - /sqlite-database:/sqlite-database
      #command: "bash -c 'cp /usr/share/java/kafka-connect-replicator/replicator-rest-extension-*.jar /etc/kafka-connect/jars/; /etc/confluent/docker/run'"
    environment:
      # ======================= CONNECT =======================
      # -> general config connect
      CONNECT_GROUP_ID: cluster-connect-dc
      CONNECT_PRODUCER_CLIENT_ID: connect-worker-producer-dc
      CONNECT_PRODUCER_ENABLE_IDEMPOTENCE: 'true'
      CONNECT_BOOTSTRAP_SERVERS: domain.com:9093

      # -> listeners connect
      CONNECT_REST_ADVERTISED_HOST_NAME: domain.com
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_REST_ADVERTISED_LISTENER: http

      ## Starting with 5.4, Confluent Platform provides the Schema Registry dedicated client configuration properties
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent

      ## Configs storage topic and settings ssl
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs-dc
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets-dc
      CONNECT_STATUS_STORAGE_TOPIC: connect-status-dc
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      # -> key and value converter
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://domain.com:8081

      # -> log
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO

      # -> producer & consumer monitoring interceptor
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: domain.com:9093
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: domain.com:9093

      # -> clashpath required due to cc-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.3.1.jar

      # -> allow overriding configs on the connector level
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All

      # -> add jar plugins
      #CONNECT_PLUGIN_PATH: /usr/share/java,/connect-plugins
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/connect-plugins
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.3.1.jar

      # -> rest extentions classes
      #CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension

      # -> connection to schema-registry using https
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent

      # -> ssl connect worker
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_SSL_KEYSTORE_PASSWORD: confluent

      # -> ssl connnect producer
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SSL
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_SSL_KEY_PASSWORD: confluent

      # -> Connect consumer
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SSL
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_SSL_KEY_PASSWORD: confluent

      # -> ssl connect for monitoring producer interceptor
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SSL
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent

      # -> ssl connect for monitoring producer interceptor
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SSL
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent

      # -> timezone
      TZ: Asia/Jakarta

      # -> other connect stuff
      CONNECT_REQUEST_TIMEOUT_MS: 120000
      KAFKA_HEAP_OPTS: -Xmx2g



  KSQL731:
    image: confluentinc/cp-ksqldb-server:7.3.1
    container_name: KSQL731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    volumes:
      - /etc/kafka/secrets:/etc/kafka/secrets
    #restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      #  ======================= KSQLDB SERVER =======================
      # ->  general config ksqldb-server
      KSQL_HOST_NAME: domain.com
      KSQL_BOOTSTRAP_SERVERS: domain.com:9093
      KSQL_KSQL_SERVICE_ID: 'ksql-dc-'
      KSQL_CONFIG_DIR: '/etc/ksql'
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1
      KSQL_KSQL_STREAMS_NUM_STREAM_THREADS: 1
      KSQL_PRODUCER_ENABLE_IDEMPOTENCE: 'true'

      # -> listeners
      KSQL_LISTENERS: http://domain.com:8088
      #KSQL_LISTENERS: "http://0.0.0.0:8088,https://0.0.0.0:8089"
      KSQL_KSQL_ADVERTISED_LISTENER: http://domain.com:8088

      # -> log
      KSQL_LOG4J_ROOT_LOGLEVEL: INFO
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

      # -> disable transmission confluent data collection [24 hours]
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'

      # -> log
      KSQL_LOG4J_ROOT_LOGLEVEL: INFO

      # -> integrate to connect
      KSQL_KSQL_CONNECT_URL: http://domain.com:8083

      # -> integrate to schema-regsitry
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://domain.com:8081

      # -> producer & consumer monitoring interceptor
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor

      # -> ssl ksqldb server
      KSQL_SECURITY_PROTOCOL: SSL
      KSQL_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KSQL_SSL_TRUSTSTORE_PASSWORD: confluent
      KSQL_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KSQL_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_SSL_KEY_PASSWORD: confluent

      # -> ssl for schema-registry using https
      KSQL_KSQL_SCHEMA_SECURITY_PROTOCOL: SSL
      KSQL_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KSQL_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
      KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent

      # -> ssl ksql monitoring interceptor
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SSL
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent


      # -> ssl ksql monitoring interceptor producer
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SSL
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent

      # -> ssl ksql monitoring interceptor consumer
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SSL
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent

      # -> timezone
      TZ: Asia/Jakarta

      # -> other ksql stuff
      KSQL_HEAP_OPTS: -Xmx2g



  C3731:
    image: confluentinc/cp-enterprise-control-center:7.3.1
    container_name: C3731
    network_mode: "host"
    extra_hosts:
      - "domain.com:10.10.10.10"
    volumes:
      - /etc/kafka/secrets:/etc/kafka/secrets
      - /etc/kafka/secrets/jaas/:/etc/kafka/secrets/jaas/
    #restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      # ======================= CONTROL CENTER ======================
      # -> general config control center
      CONTROL_CENTER_BOOTSTRAP_SERVERS: domain.com:9093

      # -> cluster name
      CONFLUENT_CONTROLCENTER_KAFKA_DC_BOOTSTRAP_SERVERS: domain.com:9093

      # -> partition and imperonation control center
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1

      # -> listners http and https ui control center
      CONTROL_CENTER_REST_LISTENERS: http://0.0.0.0:9021,https://0.0.0.0:9022

      # -> default port
      PORT: 9021

      # -> component cluster
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://domain.com:8082"
      CONTROL_CENTER_CONNECT_DC_CLUSTER: 'http://domain.com:8083'
      CONTROL_CENTER_KSQL_DC_URL: http://domain.com:8088
      CONTROL_CENTER_KSQL_DC_ADVERTISED_URL: http://domain.com:8088

      # -> log
      CONTROL_CENTER_CONTROL_CENTER_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONTROL_CENTER_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      CONTROL_CENTER_CONTROL_CENTER_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

      # -> disable auto-update control center
      CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: 'false'

      # -> increase troughput
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 100000000
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1

      # -> ui http basic authetication
      CONTROL_CENTER_REST_AUTHENTICATION_METHOD: BASIC
      CONTROL_CENTER_REST_AUTHENTICATION_REALM: c3
      CONTROL_CENTER_REST_AUTHENTICATION_ROLES: Administrators,Restricted
      CONTROL_CENTER_AUTH_RESTRICTED_ROLES: Restricted
      CONTROL_CENTER_AUTH_SESSION_EXPIRATION_MS: 600000
      CONTROL_CENTER_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/c3_authentication_jaas.conf

      # -> ssl ui rest control center
      CONTROL_CENTER_REST_LISTENERS: http://0.0.0.0:9021
      CONTROL_CENTER_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONTROL_CENTER_REST_SSL_TRUSTSTORE_PASSWORD: confluent
      CONTROL_CENTER_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONTROL_CENTER_REST_SSL_KEYSTORE_PASSWORD: confluent
      CONTROL_CENTER_REST_SSL_KEY_PASSWORD: confluent

      # ->  ssl streams control center
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SSL
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_PASSWORD: confluent
      CONTROL_CENTER_STREAMS_SSL_KEY_PASSWORD: confluent

      # -> ssl control center cluster name
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SECURITY_PROTOCOL: SSL
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SSL_TRUSTSTORE_PASSWORD: confluent
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SSL_KEYSTORE_PASSWORD: confluent
      CONFLUENT_CONTROLCENTER_KAFKA_DR_SSL_KEY_PASSWORD: confluent

      # -> other control center stuff
      CONTROL_CENTER_HEAP_OPTS: -Xms3g

      # -> confluent lisence
      CONTROL_CENTER_CONFLUENT_LICENSE:



  REST731:
    image: confluentinc/cp-kafka-rest:7.3.1
    container_name: REST731
    network_mode: host
    extra_hosts:
      - "domain.com:10.10.10.10"
    volumes:
      - /etc/kafka/secrets/:/etc/kafka/secrets/
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      # -> general config rest-proxy
      KAFKA_REST_HOST_NAME: domain.com
      KAFKA_REST_BOOTSTRAP_SERVERS: domain.com:9093

      # -> listners
      KAFKA_REST_LISTENERS: http://domain.com:8087

      # -> integrate to schema-registry
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://domain.com:8081

      # -> ssl rest-proxy
      KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KAFKA_REST_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_REST_SSL_KEY_PASSWORD: confluent

      # -> ssl rest-proxy client
      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SSL
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: confluent

      # -> ssl to schema-registry using https
      KAFKA_REST_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/domain.com.truststore.jks
      KAFKA_REST_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_REST_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/domain.com.keystore.jks
      KAFKA_REST_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_REST_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent

      # -> producer & consumer monitoring interceptor
      KAFKA_REST_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      KAFKA_REST_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor

      # -> other rest-proxy stuff
      KAFKAREST_HEAP_OPTS: -Xmx1g
